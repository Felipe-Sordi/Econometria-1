###Problema 4: Avaliação da performance de um portfólio


#Limpando envrironment e plots:

rm(list=ls())
graphics.off()

#instalando pacotes necessários:

load.lib <- c("dplyr", "tidyverse", "readxl", "ggplot2", "xts", "lubridate",
              "mFilter", 'quantmod',"readr", 'tidyquant', "rashTools", "stargazer")
install.lib <- load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
sapply(load.lib, require, character=TRUE)

#importando base de dados

BB_gov <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "BB Acoes Governanca Is FI")
Itau_gov <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "itau")
Bra_small <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "Bram FIA Small Caps")
Bra_ibov <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "Bradesco H FIA Ibovespa")
Btg <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "BTG Pactual Alpha FIA")
Opp <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "Opportunity Selection Master FI")
IBOV <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "IBOV")
CDI <- read_excel("Documents/FGV /5º Semestre/Investimentos II/Ivestimentos 2 - Problema 4.xlsx", sheet = "cdi")

#tratamento da base:

#filtrando para o período de interesse:

BB_gov <- subset(BB_gov, Data> "2014-01-01" &  Data< "2018-12-31")
Itau_gov <- subset(Itau_gov, Data> "2014-01-01" &  Data< "2018-12-31")
Bra_small <- subset(Bra_small, Data> "2014-01-01" &  Data< "2018-12-31")
Bra_ibov <- subset(Bra_ibov, Data> "2014-01-01" &  Data< "2018-12-31")
Btg <- subset(Btg, Data> "2014-01-01" &  Data< "2018-12-31")
Opp <- subset(Opp, Data> "2014-01-01" &  Data< "2018-12-31")
IBOV <- subset(IBOV, Data> "2014-01-01" &  Data< "2018-12-31")
CDI <- subset(CDI, Data> "2014-01-01" &  Data< "2018-12-31")

#excluindo feriados:
Bra_small <- Bra_small[,-3]
colnames(BB_gov)[2] <- "valorA"  
colnames(Itau_gov)[2] <- "valorB"  
colnames(Bra_small)[2] <- "valorC"  
colnames(Bra_ibov)[2] <- "valorD"  
colnames(Btg)[2] <- "valorE"  
colnames(Opp)[2] <- "valorF"  
colnames(IBOV)[2] <- "valorG"  
colnames(CDI)[2] <- "valorH"  

df = BB_gov %>% 
  inner_join(Itau_gov) %>% 
  inner_join(Bra_small) %>% 
  inner_join(Bra_ibov) %>% 
  inner_join(Btg) %>% 
  inner_join(Opp) %>% 
  inner_join(IBOV) %>% 
  inner_join(CDI)

sapply(df, class)

df2 <- df %>% 
  mutate_at(2:9, as.numeric) %>% 
  drop_na()


#Calculo do retorno:

df2$retA <- (df2$valorA/lag(df2$valorA))-1
df2$retB <- (df2$valorB/lag(df2$valorB))-1
df2$retC  <- (df2$valorC/lag(df2$valorC))-1
df2$retD  <- (df2$valorD/lag(df2$valorD))-1
df2$retE <- (df2$valorE/lag(df2$valorE))-1
df2$retF <- (df2$valorF/lag(df2$valorF))-1
df2$retG <- (df2$valorG/lag(df2$valorG))-1
df2$retH <- (df2$valorH/lag(df2$valorH))-1

#tirando primeira obs

df2 <- df2[-1,]


#calculando desvio padrão

dp_A <- sd(df2$retA)
dp_B <- sd(df2$retB)
dp_C <- sd(df2$retC)
dp_D <- sd(df2$retD)
dp_E <- sd(df2$retE)
dp_F <- sd(df2$retF)
dp_IBOV <- sd(df2$retG)
mean_CDI <- mean(df2$retH)
ex <- df2$retG- df2$retH
regA <- lm(df2$retA ~ 1 + ex)
regB <- lm(df2$retB ~ 1 + ex)
regC <- lm(df2$retC ~ 1 + ex)
regD <- lm(df2$retD ~ 1 + ex)
regE <- lm(df2$retE ~ 1 + ex)
regF <- lm(df2$retF ~ 1 + ex)

A <- (dp_IBOV/dp_A)
B <- (dp_IBOV/dp_B)
C <- (dp_IBOV/dp_C)
D <- (dp_IBOV/dp_D)
E <- (dp_IBOV/dp_E)
f <-  (dp_IBOV/dp_F)
mean_IBOV <- mean(df2$retG)
Indicadores <- data.frame (Fundo  = c("A", "B", "C", "D", "E", "F"),
                  Sharpe = c((mean(df2$retA)-mean_CDI)/dp_A,
                                    (mean(df2$retB)-mean_CDI)/dp_B,
                                    (mean(df2$retC)-mean_CDI)/dp_C,
                                    (mean(df2$retD)-mean_CDI)/dp_D,
                                    (mean(df2$retE)-mean_CDI)/dp_E,
                                    (mean(df2$retF)-mean_CDI)/dp_F),
                  Alpha_jensen = c(regA$coefficients[1], 
                                   regB$coefficients[1],
                                   regC$coefficients[1],
                                   regD$coefficients[1],
                                   regE$coefficients[1],
                                   regF$coefficients[1]),
                  Treynor = c((mean(df2$retA)-mean_CDI)/regA$coefficients[2],
                              (mean(df2$retB)-mean_CDI)/regB$coefficients[2],
                              (mean(df2$retC)-mean_CDI)/regC$coefficients[2],
                              (mean(df2$retD)-mean_CDI)/regD$coefficients[2],
                              (mean(df2$retE)-mean_CDI)/regE$coefficients[2],
                              (mean(df2$retH)-mean_CDI)/regF$coefficients[2]),
                  
                  information = c(regA$coefficients[1]/sd(regA$residuals),
                                  regB$coefficients[1]/sd(regB$residuals),
                                  regC$coefficients[1]/sd(regC$residuals),
                                  regD$coefficients[1]/sd(regD$residuals),
                                  regE$coefficients[1]/sd(regE$residuals),
                                  regF$coefficients[1]/sd(regF$residuals)),
                 
                   M_squared = c((1- A)*mean_CDI + A*mean(df2$retA)-mean_IBOV,
                                (1- B)*mean_CDI + B*mean(df2$retB)-mean_IBOV,
                                (1- C)*mean_CDI + C*mean(df2$retC)-mean_IBOV,
                                (1- D)*mean_CDI + D*mean(df2$retD)-mean_IBOV,
                                (1- E)*mean_CDI + E*mean(df2$retE)- mean_IBOV,
                                (1- f)*mean_CDI + f*mean(df2$retF)- mean_IBOV),
                  Beta = c(regA$coefficients[2],
                           regB$coefficients[2],
                           regC$coefficients[2],
                           regD$coefficients[2],
                           regE$coefficients[2],
                           regF$coefficients[2]))

