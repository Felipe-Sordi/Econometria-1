#---------------------- Felipe De Sordi e Isabela Saito -----------------------#

#limpando o environment e plots:

rm(list=ls())
graphics.off()

#abrindo e/ou instalando pacotes necessários + verificação de conflitos:

load.lib <- c("dplyr", "tidyverse", "readxl", "ggplot2", "xts", "lubridate",
              "mFilter", 'tidyquant', "fastDummies", "coalitions", "webr")
install.lib <- load.lib[!load.lib %in% installed.packages()]
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
sapply(load.lib, require, character=TRUE)
if (!require("devtools")) install.packages("devtools")
devtools::install_github("Cepesp-Fgv/cepesp-r")
library(cepespR)
#----------------------------- Tratamento da base -----------------------------#

votes <- get_votes(year=2018, position="Federal Deputy", regional_aggregation="State")

df = votes %>% 
  mutate(party = substr(NUMERO_CANDIDATO, start = 1, stop = 2)) %>% 
  subset(UF == "MG") %>% 
  select(party, QTDE_VOTOS)

df_a <- aggregate(df$QTDE_VOTOS, by = list(df$party), FUN=sum)

#------------------------- Coeficiente Partidário -----------------------------#

cadeiras <- 77
coeficiente_eleitoral <- floor(sum(df_a$x)/cadeiras)

#--------------------------- Coeficiente Eleitoral ----------------------------#

coeficiente_partidário <- floor(df_a$x/coeficiente_eleitoral)  

base = df_a %>% 
  mutate(qp = coeficiente_partidário)

#-------------------- Sobras + distribuição das cadeiras ----------------------#

sobras <- cadeiras - sum(base$qp)

for (i in 1:sobras) {
  base$Sobra_i <- base$x/(base$qp+1)
  
  base$qp <- base$qp+ifelse(base$Sobra_i == max(base$Sobra_i), 1, 0)
  i <- i+1
}

base$dHondt <- dHondt(votes = base$x, parties = base$Group.1, n_seats = cadeiras)

